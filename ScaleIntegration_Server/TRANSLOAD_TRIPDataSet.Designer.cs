//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace ScaleIntegration_Server {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("TRANSLOAD_TRIPDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class TRANSLOAD_TRIPDataSet : global::System.Data.DataSet {
        
        private EquipmentTripDataTable tableEquipmentTrip;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TRANSLOAD_TRIPDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected TRANSLOAD_TRIPDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["EquipmentTrip"] != null)) {
                    base.Tables.Add(new EquipmentTripDataTable(ds.Tables["EquipmentTrip"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EquipmentTripDataTable EquipmentTrip {
            get {
                return this.tableEquipmentTrip;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            TRANSLOAD_TRIPDataSet cln = ((TRANSLOAD_TRIPDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EquipmentTrip"] != null)) {
                    base.Tables.Add(new EquipmentTripDataTable(ds.Tables["EquipmentTrip"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableEquipmentTrip = ((EquipmentTripDataTable)(base.Tables["EquipmentTrip"]));
            if ((initTable == true)) {
                if ((this.tableEquipmentTrip != null)) {
                    this.tableEquipmentTrip.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "TRANSLOAD_TRIPDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TRANSLOAD_TRIPDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEquipmentTrip = new EquipmentTripDataTable();
            base.Tables.Add(this.tableEquipmentTrip);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEquipmentTrip() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            TRANSLOAD_TRIPDataSet ds = new TRANSLOAD_TRIPDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EquipmentTripRowChangeEventHandler(object sender, EquipmentTripRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EquipmentTripDataTable : global::System.Data.TypedTableBase<EquipmentTripRow> {
            
            private global::System.Data.DataColumn columnequipmentTripId;
            
            private global::System.Data.DataColumn columnequipmentId;
            
            private global::System.Data.DataColumn columnlocationId;
            
            private global::System.Data.DataColumn columncustomerId;
            
            private global::System.Data.DataColumn columnshipperId;
            
            private global::System.Data.DataColumn columnequipmentTripLoadedStatus;
            
            private global::System.Data.DataColumn columnequipmentTripType;
            
            private global::System.Data.DataColumn columnverificationSeal;
            
            private global::System.Data.DataColumn columnunitTrain;
            
            private global::System.Data.DataColumn columnoutboundUnitTrain;
            
            private global::System.Data.DataColumn columnstatus;
            
            private global::System.Data.DataColumn columnredTagComment;
            
            private global::System.Data.DataColumn columnreserveComment;
            
            private global::System.Data.DataColumn columnarriveDepartStatus;
            
            private global::System.Data.DataColumn columnseals;
            
            private global::System.Data.DataColumn columnarrivalInspectionLoadedEmptyStatus;
            
            private global::System.Data.DataColumn columnreleaseInspectionLoadedEmptyStatus;
            
            private global::System.Data.DataColumn columnreleaseAuthorizationLoadedEmptyStatus;
            
            private global::System.Data.DataColumn columnserialNumber;
            
            private global::System.Data.DataColumn columnarrivalDate;
            
            private global::System.Data.DataColumn columnshipDate;
            
            private global::System.Data.DataColumn columnarrivalInspectionDate;
            
            private global::System.Data.DataColumn columnreleaseInspectionDate;
            
            private global::System.Data.DataColumn columnreleaseAuthorizationDate;
            
            private global::System.Data.DataColumn columnfileTransferDate;
            
            private global::System.Data.DataColumn columncpDate;
            
            private global::System.Data.DataColumn columnloadedEmptyDate;
            
            private global::System.Data.DataColumn columnreleaseDate;
            
            private global::System.Data.DataColumn columndepartDate;
            
            private global::System.Data.DataColumn columnarrivalWeight;
            
            private global::System.Data.DataColumn columnsequence;
            
            private global::System.Data.DataColumn columnisRedTag;
            
            private global::System.Data.DataColumn columnisReserve;
            
            private global::System.Data.DataColumn columnisVoided;
            
            private global::System.Data.DataColumn columninputDate;
            
            private global::System.Data.DataColumn columninputBy;
            
            private global::System.Data.DataColumn columnmodifiedDate;
            
            private global::System.Data.DataColumn columnmodifiedBy;
            
            private global::System.Data.DataColumn columnfinalTransferDate;
            
            private global::System.Data.DataColumn columnoutagePercentage;
            
            private global::System.Data.DataColumn columnsiteId;
            
            private global::System.Data.DataColumn columnprocessBy;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EquipmentTripDataTable() {
                this.TableName = "EquipmentTrip";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EquipmentTripDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EquipmentTripDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn equipmentTripIdColumn {
                get {
                    return this.columnequipmentTripId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn equipmentIdColumn {
                get {
                    return this.columnequipmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn locationIdColumn {
                get {
                    return this.columnlocationId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn customerIdColumn {
                get {
                    return this.columncustomerId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn shipperIdColumn {
                get {
                    return this.columnshipperId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn equipmentTripLoadedStatusColumn {
                get {
                    return this.columnequipmentTripLoadedStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn equipmentTripTypeColumn {
                get {
                    return this.columnequipmentTripType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn verificationSealColumn {
                get {
                    return this.columnverificationSeal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn unitTrainColumn {
                get {
                    return this.columnunitTrain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn outboundUnitTrainColumn {
                get {
                    return this.columnoutboundUnitTrain;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn statusColumn {
                get {
                    return this.columnstatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn redTagCommentColumn {
                get {
                    return this.columnredTagComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reserveCommentColumn {
                get {
                    return this.columnreserveComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn arriveDepartStatusColumn {
                get {
                    return this.columnarriveDepartStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sealsColumn {
                get {
                    return this.columnseals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn arrivalInspectionLoadedEmptyStatusColumn {
                get {
                    return this.columnarrivalInspectionLoadedEmptyStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn releaseInspectionLoadedEmptyStatusColumn {
                get {
                    return this.columnreleaseInspectionLoadedEmptyStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn releaseAuthorizationLoadedEmptyStatusColumn {
                get {
                    return this.columnreleaseAuthorizationLoadedEmptyStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn serialNumberColumn {
                get {
                    return this.columnserialNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn arrivalDateColumn {
                get {
                    return this.columnarrivalDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn shipDateColumn {
                get {
                    return this.columnshipDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn arrivalInspectionDateColumn {
                get {
                    return this.columnarrivalInspectionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn releaseInspectionDateColumn {
                get {
                    return this.columnreleaseInspectionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn releaseAuthorizationDateColumn {
                get {
                    return this.columnreleaseAuthorizationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fileTransferDateColumn {
                get {
                    return this.columnfileTransferDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cpDateColumn {
                get {
                    return this.columncpDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn loadedEmptyDateColumn {
                get {
                    return this.columnloadedEmptyDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn releaseDateColumn {
                get {
                    return this.columnreleaseDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn departDateColumn {
                get {
                    return this.columndepartDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn arrivalWeightColumn {
                get {
                    return this.columnarrivalWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn sequenceColumn {
                get {
                    return this.columnsequence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isRedTagColumn {
                get {
                    return this.columnisRedTag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isReserveColumn {
                get {
                    return this.columnisReserve;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isVoidedColumn {
                get {
                    return this.columnisVoided;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn inputDateColumn {
                get {
                    return this.columninputDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn inputByColumn {
                get {
                    return this.columninputBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn modifiedDateColumn {
                get {
                    return this.columnmodifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn modifiedByColumn {
                get {
                    return this.columnmodifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn finalTransferDateColumn {
                get {
                    return this.columnfinalTransferDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn outagePercentageColumn {
                get {
                    return this.columnoutagePercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn siteIdColumn {
                get {
                    return this.columnsiteId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn processByColumn {
                get {
                    return this.columnprocessBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EquipmentTripRow this[int index] {
                get {
                    return ((EquipmentTripRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EquipmentTripRowChangeEventHandler EquipmentTripRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EquipmentTripRowChangeEventHandler EquipmentTripRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EquipmentTripRowChangeEventHandler EquipmentTripRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EquipmentTripRowChangeEventHandler EquipmentTripRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEquipmentTripRow(EquipmentTripRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EquipmentTripRow AddEquipmentTripRow(
                        long equipmentId, 
                        long locationId, 
                        long customerId, 
                        long shipperId, 
                        string equipmentTripLoadedStatus, 
                        string equipmentTripType, 
                        string verificationSeal, 
                        string unitTrain, 
                        string outboundUnitTrain, 
                        string status, 
                        string redTagComment, 
                        string reserveComment, 
                        string arriveDepartStatus, 
                        string seals, 
                        string arrivalInspectionLoadedEmptyStatus, 
                        string releaseInspectionLoadedEmptyStatus, 
                        string releaseAuthorizationLoadedEmptyStatus, 
                        string serialNumber, 
                        System.DateTime arrivalDate, 
                        System.DateTime shipDate, 
                        System.DateTime arrivalInspectionDate, 
                        System.DateTime releaseInspectionDate, 
                        System.DateTime releaseAuthorizationDate, 
                        System.DateTime fileTransferDate, 
                        System.DateTime cpDate, 
                        System.DateTime loadedEmptyDate, 
                        System.DateTime releaseDate, 
                        System.DateTime departDate, 
                        decimal arrivalWeight, 
                        int sequence, 
                        bool isRedTag, 
                        bool isReserve, 
                        bool isVoided, 
                        System.DateTime inputDate, 
                        string inputBy, 
                        System.DateTime modifiedDate, 
                        string modifiedBy, 
                        System.DateTime finalTransferDate, 
                        decimal outagePercentage, 
                        long siteId, 
                        string processBy) {
                EquipmentTripRow rowEquipmentTripRow = ((EquipmentTripRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        equipmentId,
                        locationId,
                        customerId,
                        shipperId,
                        equipmentTripLoadedStatus,
                        equipmentTripType,
                        verificationSeal,
                        unitTrain,
                        outboundUnitTrain,
                        status,
                        redTagComment,
                        reserveComment,
                        arriveDepartStatus,
                        seals,
                        arrivalInspectionLoadedEmptyStatus,
                        releaseInspectionLoadedEmptyStatus,
                        releaseAuthorizationLoadedEmptyStatus,
                        serialNumber,
                        arrivalDate,
                        shipDate,
                        arrivalInspectionDate,
                        releaseInspectionDate,
                        releaseAuthorizationDate,
                        fileTransferDate,
                        cpDate,
                        loadedEmptyDate,
                        releaseDate,
                        departDate,
                        arrivalWeight,
                        sequence,
                        isRedTag,
                        isReserve,
                        isVoided,
                        inputDate,
                        inputBy,
                        modifiedDate,
                        modifiedBy,
                        finalTransferDate,
                        outagePercentage,
                        siteId,
                        processBy};
                rowEquipmentTripRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEquipmentTripRow);
                return rowEquipmentTripRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EquipmentTripRow FindByequipmentTripId(long equipmentTripId) {
                return ((EquipmentTripRow)(this.Rows.Find(new object[] {
                            equipmentTripId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EquipmentTripDataTable cln = ((EquipmentTripDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EquipmentTripDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnequipmentTripId = base.Columns["equipmentTripId"];
                this.columnequipmentId = base.Columns["equipmentId"];
                this.columnlocationId = base.Columns["locationId"];
                this.columncustomerId = base.Columns["customerId"];
                this.columnshipperId = base.Columns["shipperId"];
                this.columnequipmentTripLoadedStatus = base.Columns["equipmentTripLoadedStatus"];
                this.columnequipmentTripType = base.Columns["equipmentTripType"];
                this.columnverificationSeal = base.Columns["verificationSeal"];
                this.columnunitTrain = base.Columns["unitTrain"];
                this.columnoutboundUnitTrain = base.Columns["outboundUnitTrain"];
                this.columnstatus = base.Columns["status"];
                this.columnredTagComment = base.Columns["redTagComment"];
                this.columnreserveComment = base.Columns["reserveComment"];
                this.columnarriveDepartStatus = base.Columns["arriveDepartStatus"];
                this.columnseals = base.Columns["seals"];
                this.columnarrivalInspectionLoadedEmptyStatus = base.Columns["arrivalInspectionLoadedEmptyStatus"];
                this.columnreleaseInspectionLoadedEmptyStatus = base.Columns["releaseInspectionLoadedEmptyStatus"];
                this.columnreleaseAuthorizationLoadedEmptyStatus = base.Columns["releaseAuthorizationLoadedEmptyStatus"];
                this.columnserialNumber = base.Columns["serialNumber"];
                this.columnarrivalDate = base.Columns["arrivalDate"];
                this.columnshipDate = base.Columns["shipDate"];
                this.columnarrivalInspectionDate = base.Columns["arrivalInspectionDate"];
                this.columnreleaseInspectionDate = base.Columns["releaseInspectionDate"];
                this.columnreleaseAuthorizationDate = base.Columns["releaseAuthorizationDate"];
                this.columnfileTransferDate = base.Columns["fileTransferDate"];
                this.columncpDate = base.Columns["cpDate"];
                this.columnloadedEmptyDate = base.Columns["loadedEmptyDate"];
                this.columnreleaseDate = base.Columns["releaseDate"];
                this.columndepartDate = base.Columns["departDate"];
                this.columnarrivalWeight = base.Columns["arrivalWeight"];
                this.columnsequence = base.Columns["sequence"];
                this.columnisRedTag = base.Columns["isRedTag"];
                this.columnisReserve = base.Columns["isReserve"];
                this.columnisVoided = base.Columns["isVoided"];
                this.columninputDate = base.Columns["inputDate"];
                this.columninputBy = base.Columns["inputBy"];
                this.columnmodifiedDate = base.Columns["modifiedDate"];
                this.columnmodifiedBy = base.Columns["modifiedBy"];
                this.columnfinalTransferDate = base.Columns["finalTransferDate"];
                this.columnoutagePercentage = base.Columns["outagePercentage"];
                this.columnsiteId = base.Columns["siteId"];
                this.columnprocessBy = base.Columns["processBy"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnequipmentTripId = new global::System.Data.DataColumn("equipmentTripId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnequipmentTripId);
                this.columnequipmentId = new global::System.Data.DataColumn("equipmentId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnequipmentId);
                this.columnlocationId = new global::System.Data.DataColumn("locationId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlocationId);
                this.columncustomerId = new global::System.Data.DataColumn("customerId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncustomerId);
                this.columnshipperId = new global::System.Data.DataColumn("shipperId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshipperId);
                this.columnequipmentTripLoadedStatus = new global::System.Data.DataColumn("equipmentTripLoadedStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnequipmentTripLoadedStatus);
                this.columnequipmentTripType = new global::System.Data.DataColumn("equipmentTripType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnequipmentTripType);
                this.columnverificationSeal = new global::System.Data.DataColumn("verificationSeal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnverificationSeal);
                this.columnunitTrain = new global::System.Data.DataColumn("unitTrain", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnunitTrain);
                this.columnoutboundUnitTrain = new global::System.Data.DataColumn("outboundUnitTrain", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoutboundUnitTrain);
                this.columnstatus = new global::System.Data.DataColumn("status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstatus);
                this.columnredTagComment = new global::System.Data.DataColumn("redTagComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnredTagComment);
                this.columnreserveComment = new global::System.Data.DataColumn("reserveComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreserveComment);
                this.columnarriveDepartStatus = new global::System.Data.DataColumn("arriveDepartStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnarriveDepartStatus);
                this.columnseals = new global::System.Data.DataColumn("seals", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseals);
                this.columnarrivalInspectionLoadedEmptyStatus = new global::System.Data.DataColumn("arrivalInspectionLoadedEmptyStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnarrivalInspectionLoadedEmptyStatus);
                this.columnreleaseInspectionLoadedEmptyStatus = new global::System.Data.DataColumn("releaseInspectionLoadedEmptyStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreleaseInspectionLoadedEmptyStatus);
                this.columnreleaseAuthorizationLoadedEmptyStatus = new global::System.Data.DataColumn("releaseAuthorizationLoadedEmptyStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreleaseAuthorizationLoadedEmptyStatus);
                this.columnserialNumber = new global::System.Data.DataColumn("serialNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnserialNumber);
                this.columnarrivalDate = new global::System.Data.DataColumn("arrivalDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnarrivalDate);
                this.columnshipDate = new global::System.Data.DataColumn("shipDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnshipDate);
                this.columnarrivalInspectionDate = new global::System.Data.DataColumn("arrivalInspectionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnarrivalInspectionDate);
                this.columnreleaseInspectionDate = new global::System.Data.DataColumn("releaseInspectionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreleaseInspectionDate);
                this.columnreleaseAuthorizationDate = new global::System.Data.DataColumn("releaseAuthorizationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreleaseAuthorizationDate);
                this.columnfileTransferDate = new global::System.Data.DataColumn("fileTransferDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfileTransferDate);
                this.columncpDate = new global::System.Data.DataColumn("cpDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncpDate);
                this.columnloadedEmptyDate = new global::System.Data.DataColumn("loadedEmptyDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnloadedEmptyDate);
                this.columnreleaseDate = new global::System.Data.DataColumn("releaseDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreleaseDate);
                this.columndepartDate = new global::System.Data.DataColumn("departDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndepartDate);
                this.columnarrivalWeight = new global::System.Data.DataColumn("arrivalWeight", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnarrivalWeight);
                this.columnsequence = new global::System.Data.DataColumn("sequence", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsequence);
                this.columnisRedTag = new global::System.Data.DataColumn("isRedTag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisRedTag);
                this.columnisReserve = new global::System.Data.DataColumn("isReserve", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisReserve);
                this.columnisVoided = new global::System.Data.DataColumn("isVoided", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisVoided);
                this.columninputDate = new global::System.Data.DataColumn("inputDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninputDate);
                this.columninputBy = new global::System.Data.DataColumn("inputBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninputBy);
                this.columnmodifiedDate = new global::System.Data.DataColumn("modifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodifiedDate);
                this.columnmodifiedBy = new global::System.Data.DataColumn("modifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodifiedBy);
                this.columnfinalTransferDate = new global::System.Data.DataColumn("finalTransferDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfinalTransferDate);
                this.columnoutagePercentage = new global::System.Data.DataColumn("outagePercentage", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoutagePercentage);
                this.columnsiteId = new global::System.Data.DataColumn("siteId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsiteId);
                this.columnprocessBy = new global::System.Data.DataColumn("processBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnprocessBy);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnequipmentTripId}, true));
                this.columnequipmentTripId.AutoIncrement = true;
                this.columnequipmentTripId.AutoIncrementSeed = -1;
                this.columnequipmentTripId.AutoIncrementStep = -1;
                this.columnequipmentTripId.AllowDBNull = false;
                this.columnequipmentTripId.ReadOnly = true;
                this.columnequipmentTripId.Unique = true;
                this.columnequipmentId.AllowDBNull = false;
                this.columncustomerId.AllowDBNull = false;
                this.columnshipperId.AllowDBNull = false;
                this.columnequipmentTripLoadedStatus.AllowDBNull = false;
                this.columnequipmentTripLoadedStatus.MaxLength = 10;
                this.columnequipmentTripType.MaxLength = 10;
                this.columnverificationSeal.MaxLength = 50;
                this.columnunitTrain.MaxLength = 100;
                this.columnoutboundUnitTrain.MaxLength = 100;
                this.columnstatus.AllowDBNull = false;
                this.columnstatus.MaxLength = 20;
                this.columnredTagComment.MaxLength = 1000;
                this.columnreserveComment.MaxLength = 1000;
                this.columnarriveDepartStatus.MaxLength = 100;
                this.columnseals.MaxLength = 100;
                this.columnarrivalInspectionLoadedEmptyStatus.MaxLength = 10;
                this.columnreleaseInspectionLoadedEmptyStatus.MaxLength = 10;
                this.columnreleaseAuthorizationLoadedEmptyStatus.MaxLength = 10;
                this.columnserialNumber.MaxLength = 100;
                this.columnshipDate.AllowDBNull = false;
                this.columnisVoided.AllowDBNull = false;
                this.columninputDate.AllowDBNull = false;
                this.columninputBy.AllowDBNull = false;
                this.columninputBy.MaxLength = 50;
                this.columnmodifiedDate.AllowDBNull = false;
                this.columnmodifiedBy.AllowDBNull = false;
                this.columnmodifiedBy.MaxLength = 50;
                this.columnprocessBy.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EquipmentTripRow NewEquipmentTripRow() {
                return ((EquipmentTripRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EquipmentTripRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EquipmentTripRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EquipmentTripRowChanged != null)) {
                    this.EquipmentTripRowChanged(this, new EquipmentTripRowChangeEvent(((EquipmentTripRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EquipmentTripRowChanging != null)) {
                    this.EquipmentTripRowChanging(this, new EquipmentTripRowChangeEvent(((EquipmentTripRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EquipmentTripRowDeleted != null)) {
                    this.EquipmentTripRowDeleted(this, new EquipmentTripRowChangeEvent(((EquipmentTripRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EquipmentTripRowDeleting != null)) {
                    this.EquipmentTripRowDeleting(this, new EquipmentTripRowChangeEvent(((EquipmentTripRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEquipmentTripRow(EquipmentTripRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TRANSLOAD_TRIPDataSet ds = new TRANSLOAD_TRIPDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EquipmentTripDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EquipmentTripRow : global::System.Data.DataRow {
            
            private EquipmentTripDataTable tableEquipmentTrip;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EquipmentTripRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEquipmentTrip = ((EquipmentTripDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long equipmentTripId {
                get {
                    return ((long)(this[this.tableEquipmentTrip.equipmentTripIdColumn]));
                }
                set {
                    this[this.tableEquipmentTrip.equipmentTripIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long equipmentId {
                get {
                    return ((long)(this[this.tableEquipmentTrip.equipmentIdColumn]));
                }
                set {
                    this[this.tableEquipmentTrip.equipmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long locationId {
                get {
                    try {
                        return ((long)(this[this.tableEquipmentTrip.locationIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'locationId\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.locationIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long customerId {
                get {
                    return ((long)(this[this.tableEquipmentTrip.customerIdColumn]));
                }
                set {
                    this[this.tableEquipmentTrip.customerIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long shipperId {
                get {
                    return ((long)(this[this.tableEquipmentTrip.shipperIdColumn]));
                }
                set {
                    this[this.tableEquipmentTrip.shipperIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string equipmentTripLoadedStatus {
                get {
                    return ((string)(this[this.tableEquipmentTrip.equipmentTripLoadedStatusColumn]));
                }
                set {
                    this[this.tableEquipmentTrip.equipmentTripLoadedStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string equipmentTripType {
                get {
                    try {
                        return ((string)(this[this.tableEquipmentTrip.equipmentTripTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'equipmentTripType\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.equipmentTripTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string verificationSeal {
                get {
                    try {
                        return ((string)(this[this.tableEquipmentTrip.verificationSealColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'verificationSeal\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.verificationSealColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string unitTrain {
                get {
                    try {
                        return ((string)(this[this.tableEquipmentTrip.unitTrainColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'unitTrain\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.unitTrainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string outboundUnitTrain {
                get {
                    try {
                        return ((string)(this[this.tableEquipmentTrip.outboundUnitTrainColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'outboundUnitTrain\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.outboundUnitTrainColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string status {
                get {
                    return ((string)(this[this.tableEquipmentTrip.statusColumn]));
                }
                set {
                    this[this.tableEquipmentTrip.statusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string redTagComment {
                get {
                    try {
                        return ((string)(this[this.tableEquipmentTrip.redTagCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'redTagComment\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.redTagCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reserveComment {
                get {
                    try {
                        return ((string)(this[this.tableEquipmentTrip.reserveCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reserveComment\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.reserveCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string arriveDepartStatus {
                get {
                    try {
                        return ((string)(this[this.tableEquipmentTrip.arriveDepartStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'arriveDepartStatus\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.arriveDepartStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string seals {
                get {
                    try {
                        return ((string)(this[this.tableEquipmentTrip.sealsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'seals\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.sealsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string arrivalInspectionLoadedEmptyStatus {
                get {
                    try {
                        return ((string)(this[this.tableEquipmentTrip.arrivalInspectionLoadedEmptyStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'arrivalInspectionLoadedEmptyStatus\' in table \'EquipmentTrip" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.arrivalInspectionLoadedEmptyStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string releaseInspectionLoadedEmptyStatus {
                get {
                    try {
                        return ((string)(this[this.tableEquipmentTrip.releaseInspectionLoadedEmptyStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'releaseInspectionLoadedEmptyStatus\' in table \'EquipmentTrip" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.releaseInspectionLoadedEmptyStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string releaseAuthorizationLoadedEmptyStatus {
                get {
                    try {
                        return ((string)(this[this.tableEquipmentTrip.releaseAuthorizationLoadedEmptyStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'releaseAuthorizationLoadedEmptyStatus\' in table \'EquipmentT" +
                                "rip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.releaseAuthorizationLoadedEmptyStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string serialNumber {
                get {
                    try {
                        return ((string)(this[this.tableEquipmentTrip.serialNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'serialNumber\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.serialNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime arrivalDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEquipmentTrip.arrivalDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'arrivalDate\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.arrivalDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime shipDate {
                get {
                    return ((global::System.DateTime)(this[this.tableEquipmentTrip.shipDateColumn]));
                }
                set {
                    this[this.tableEquipmentTrip.shipDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime arrivalInspectionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEquipmentTrip.arrivalInspectionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'arrivalInspectionDate\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.arrivalInspectionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime releaseInspectionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEquipmentTrip.releaseInspectionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'releaseInspectionDate\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.releaseInspectionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime releaseAuthorizationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEquipmentTrip.releaseAuthorizationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'releaseAuthorizationDate\' in table \'EquipmentTrip\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.releaseAuthorizationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime fileTransferDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEquipmentTrip.fileTransferDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fileTransferDate\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.fileTransferDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime cpDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEquipmentTrip.cpDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cpDate\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.cpDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime loadedEmptyDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEquipmentTrip.loadedEmptyDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'loadedEmptyDate\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.loadedEmptyDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime releaseDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEquipmentTrip.releaseDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'releaseDate\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.releaseDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime departDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEquipmentTrip.departDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'departDate\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.departDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal arrivalWeight {
                get {
                    try {
                        return ((decimal)(this[this.tableEquipmentTrip.arrivalWeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'arrivalWeight\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.arrivalWeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int sequence {
                get {
                    try {
                        return ((int)(this[this.tableEquipmentTrip.sequenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'sequence\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.sequenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isRedTag {
                get {
                    try {
                        return ((bool)(this[this.tableEquipmentTrip.isRedTagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isRedTag\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.isRedTagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isReserve {
                get {
                    try {
                        return ((bool)(this[this.tableEquipmentTrip.isReserveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isReserve\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.isReserveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool isVoided {
                get {
                    return ((bool)(this[this.tableEquipmentTrip.isVoidedColumn]));
                }
                set {
                    this[this.tableEquipmentTrip.isVoidedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime inputDate {
                get {
                    return ((global::System.DateTime)(this[this.tableEquipmentTrip.inputDateColumn]));
                }
                set {
                    this[this.tableEquipmentTrip.inputDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string inputBy {
                get {
                    return ((string)(this[this.tableEquipmentTrip.inputByColumn]));
                }
                set {
                    this[this.tableEquipmentTrip.inputByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime modifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableEquipmentTrip.modifiedDateColumn]));
                }
                set {
                    this[this.tableEquipmentTrip.modifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string modifiedBy {
                get {
                    return ((string)(this[this.tableEquipmentTrip.modifiedByColumn]));
                }
                set {
                    this[this.tableEquipmentTrip.modifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime finalTransferDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEquipmentTrip.finalTransferDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'finalTransferDate\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.finalTransferDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal outagePercentage {
                get {
                    try {
                        return ((decimal)(this[this.tableEquipmentTrip.outagePercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'outagePercentage\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.outagePercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long siteId {
                get {
                    try {
                        return ((long)(this[this.tableEquipmentTrip.siteIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'siteId\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.siteIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string processBy {
                get {
                    try {
                        return ((string)(this[this.tableEquipmentTrip.processByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'processBy\' in table \'EquipmentTrip\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEquipmentTrip.processByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IslocationIdNull() {
                return this.IsNull(this.tableEquipmentTrip.locationIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetlocationIdNull() {
                this[this.tableEquipmentTrip.locationIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsequipmentTripTypeNull() {
                return this.IsNull(this.tableEquipmentTrip.equipmentTripTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetequipmentTripTypeNull() {
                this[this.tableEquipmentTrip.equipmentTripTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsverificationSealNull() {
                return this.IsNull(this.tableEquipmentTrip.verificationSealColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetverificationSealNull() {
                this[this.tableEquipmentTrip.verificationSealColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsunitTrainNull() {
                return this.IsNull(this.tableEquipmentTrip.unitTrainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetunitTrainNull() {
                this[this.tableEquipmentTrip.unitTrainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoutboundUnitTrainNull() {
                return this.IsNull(this.tableEquipmentTrip.outboundUnitTrainColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoutboundUnitTrainNull() {
                this[this.tableEquipmentTrip.outboundUnitTrainColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsredTagCommentNull() {
                return this.IsNull(this.tableEquipmentTrip.redTagCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetredTagCommentNull() {
                this[this.tableEquipmentTrip.redTagCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsreserveCommentNull() {
                return this.IsNull(this.tableEquipmentTrip.reserveCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetreserveCommentNull() {
                this[this.tableEquipmentTrip.reserveCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsarriveDepartStatusNull() {
                return this.IsNull(this.tableEquipmentTrip.arriveDepartStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetarriveDepartStatusNull() {
                this[this.tableEquipmentTrip.arriveDepartStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssealsNull() {
                return this.IsNull(this.tableEquipmentTrip.sealsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsealsNull() {
                this[this.tableEquipmentTrip.sealsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsarrivalInspectionLoadedEmptyStatusNull() {
                return this.IsNull(this.tableEquipmentTrip.arrivalInspectionLoadedEmptyStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetarrivalInspectionLoadedEmptyStatusNull() {
                this[this.tableEquipmentTrip.arrivalInspectionLoadedEmptyStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsreleaseInspectionLoadedEmptyStatusNull() {
                return this.IsNull(this.tableEquipmentTrip.releaseInspectionLoadedEmptyStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetreleaseInspectionLoadedEmptyStatusNull() {
                this[this.tableEquipmentTrip.releaseInspectionLoadedEmptyStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsreleaseAuthorizationLoadedEmptyStatusNull() {
                return this.IsNull(this.tableEquipmentTrip.releaseAuthorizationLoadedEmptyStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetreleaseAuthorizationLoadedEmptyStatusNull() {
                this[this.tableEquipmentTrip.releaseAuthorizationLoadedEmptyStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsserialNumberNull() {
                return this.IsNull(this.tableEquipmentTrip.serialNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetserialNumberNull() {
                this[this.tableEquipmentTrip.serialNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsarrivalDateNull() {
                return this.IsNull(this.tableEquipmentTrip.arrivalDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetarrivalDateNull() {
                this[this.tableEquipmentTrip.arrivalDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsarrivalInspectionDateNull() {
                return this.IsNull(this.tableEquipmentTrip.arrivalInspectionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetarrivalInspectionDateNull() {
                this[this.tableEquipmentTrip.arrivalInspectionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsreleaseInspectionDateNull() {
                return this.IsNull(this.tableEquipmentTrip.releaseInspectionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetreleaseInspectionDateNull() {
                this[this.tableEquipmentTrip.releaseInspectionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsreleaseAuthorizationDateNull() {
                return this.IsNull(this.tableEquipmentTrip.releaseAuthorizationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetreleaseAuthorizationDateNull() {
                this[this.tableEquipmentTrip.releaseAuthorizationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfileTransferDateNull() {
                return this.IsNull(this.tableEquipmentTrip.fileTransferDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfileTransferDateNull() {
                this[this.tableEquipmentTrip.fileTransferDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscpDateNull() {
                return this.IsNull(this.tableEquipmentTrip.cpDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcpDateNull() {
                this[this.tableEquipmentTrip.cpDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsloadedEmptyDateNull() {
                return this.IsNull(this.tableEquipmentTrip.loadedEmptyDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetloadedEmptyDateNull() {
                this[this.tableEquipmentTrip.loadedEmptyDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsreleaseDateNull() {
                return this.IsNull(this.tableEquipmentTrip.releaseDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetreleaseDateNull() {
                this[this.tableEquipmentTrip.releaseDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdepartDateNull() {
                return this.IsNull(this.tableEquipmentTrip.departDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdepartDateNull() {
                this[this.tableEquipmentTrip.departDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsarrivalWeightNull() {
                return this.IsNull(this.tableEquipmentTrip.arrivalWeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetarrivalWeightNull() {
                this[this.tableEquipmentTrip.arrivalWeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssequenceNull() {
                return this.IsNull(this.tableEquipmentTrip.sequenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsequenceNull() {
                this[this.tableEquipmentTrip.sequenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisRedTagNull() {
                return this.IsNull(this.tableEquipmentTrip.isRedTagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisRedTagNull() {
                this[this.tableEquipmentTrip.isRedTagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisReserveNull() {
                return this.IsNull(this.tableEquipmentTrip.isReserveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisReserveNull() {
                this[this.tableEquipmentTrip.isReserveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfinalTransferDateNull() {
                return this.IsNull(this.tableEquipmentTrip.finalTransferDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfinalTransferDateNull() {
                this[this.tableEquipmentTrip.finalTransferDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoutagePercentageNull() {
                return this.IsNull(this.tableEquipmentTrip.outagePercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoutagePercentageNull() {
                this[this.tableEquipmentTrip.outagePercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssiteIdNull() {
                return this.IsNull(this.tableEquipmentTrip.siteIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsiteIdNull() {
                this[this.tableEquipmentTrip.siteIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsprocessByNull() {
                return this.IsNull(this.tableEquipmentTrip.processByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetprocessByNull() {
                this[this.tableEquipmentTrip.processByColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EquipmentTripRowChangeEvent : global::System.EventArgs {
            
            private EquipmentTripRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EquipmentTripRowChangeEvent(EquipmentTripRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EquipmentTripRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace ScaleIntegration_Server.TRANSLOAD_TRIPDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EquipmentTripTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EquipmentTripTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EquipmentTrip";
            tableMapping.ColumnMappings.Add("equipmentTripId", "equipmentTripId");
            tableMapping.ColumnMappings.Add("equipmentId", "equipmentId");
            tableMapping.ColumnMappings.Add("locationId", "locationId");
            tableMapping.ColumnMappings.Add("customerId", "customerId");
            tableMapping.ColumnMappings.Add("shipperId", "shipperId");
            tableMapping.ColumnMappings.Add("equipmentTripLoadedStatus", "equipmentTripLoadedStatus");
            tableMapping.ColumnMappings.Add("equipmentTripType", "equipmentTripType");
            tableMapping.ColumnMappings.Add("verificationSeal", "verificationSeal");
            tableMapping.ColumnMappings.Add("unitTrain", "unitTrain");
            tableMapping.ColumnMappings.Add("outboundUnitTrain", "outboundUnitTrain");
            tableMapping.ColumnMappings.Add("status", "status");
            tableMapping.ColumnMappings.Add("redTagComment", "redTagComment");
            tableMapping.ColumnMappings.Add("reserveComment", "reserveComment");
            tableMapping.ColumnMappings.Add("arriveDepartStatus", "arriveDepartStatus");
            tableMapping.ColumnMappings.Add("seals", "seals");
            tableMapping.ColumnMappings.Add("arrivalInspectionLoadedEmptyStatus", "arrivalInspectionLoadedEmptyStatus");
            tableMapping.ColumnMappings.Add("releaseInspectionLoadedEmptyStatus", "releaseInspectionLoadedEmptyStatus");
            tableMapping.ColumnMappings.Add("releaseAuthorizationLoadedEmptyStatus", "releaseAuthorizationLoadedEmptyStatus");
            tableMapping.ColumnMappings.Add("serialNumber", "serialNumber");
            tableMapping.ColumnMappings.Add("arrivalDate", "arrivalDate");
            tableMapping.ColumnMappings.Add("shipDate", "shipDate");
            tableMapping.ColumnMappings.Add("arrivalInspectionDate", "arrivalInspectionDate");
            tableMapping.ColumnMappings.Add("releaseInspectionDate", "releaseInspectionDate");
            tableMapping.ColumnMappings.Add("releaseAuthorizationDate", "releaseAuthorizationDate");
            tableMapping.ColumnMappings.Add("fileTransferDate", "fileTransferDate");
            tableMapping.ColumnMappings.Add("cpDate", "cpDate");
            tableMapping.ColumnMappings.Add("loadedEmptyDate", "loadedEmptyDate");
            tableMapping.ColumnMappings.Add("releaseDate", "releaseDate");
            tableMapping.ColumnMappings.Add("departDate", "departDate");
            tableMapping.ColumnMappings.Add("arrivalWeight", "arrivalWeight");
            tableMapping.ColumnMappings.Add("sequence", "sequence");
            tableMapping.ColumnMappings.Add("isRedTag", "isRedTag");
            tableMapping.ColumnMappings.Add("isReserve", "isReserve");
            tableMapping.ColumnMappings.Add("isVoided", "isVoided");
            tableMapping.ColumnMappings.Add("inputDate", "inputDate");
            tableMapping.ColumnMappings.Add("inputBy", "inputBy");
            tableMapping.ColumnMappings.Add("modifiedDate", "modifiedDate");
            tableMapping.ColumnMappings.Add("modifiedBy", "modifiedBy");
            tableMapping.ColumnMappings.Add("finalTransferDate", "finalTransferDate");
            tableMapping.ColumnMappings.Add("outagePercentage", "outagePercentage");
            tableMapping.ColumnMappings.Add("siteId", "siteId");
            tableMapping.ColumnMappings.Add("processBy", "processBy");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[EquipmentTrip] WHERE (([equipmentTripId] = @Original_equipment" +
                "TripId) AND ([equipmentId] = @Original_equipmentId) AND ((@IsNull_locationId = 1" +
                " AND [locationId] IS NULL) OR ([locationId] = @Original_locationId)) AND ([custo" +
                "merId] = @Original_customerId) AND ([shipperId] = @Original_shipperId) AND ([equ" +
                "ipmentTripLoadedStatus] = @Original_equipmentTripLoadedStatus) AND ((@IsNull_equ" +
                "ipmentTripType = 1 AND [equipmentTripType] IS NULL) OR ([equipmentTripType] = @O" +
                "riginal_equipmentTripType)) AND ((@IsNull_verificationSeal = 1 AND [verification" +
                "Seal] IS NULL) OR ([verificationSeal] = @Original_verificationSeal)) AND ((@IsNu" +
                "ll_unitTrain = 1 AND [unitTrain] IS NULL) OR ([unitTrain] = @Original_unitTrain)" +
                ") AND ((@IsNull_outboundUnitTrain = 1 AND [outboundUnitTrain] IS NULL) OR ([outb" +
                "oundUnitTrain] = @Original_outboundUnitTrain)) AND ([status] = @Original_status)" +
                " AND ((@IsNull_redTagComment = 1 AND [redTagComment] IS NULL) OR ([redTagComment" +
                "] = @Original_redTagComment)) AND ((@IsNull_reserveComment = 1 AND [reserveComme" +
                "nt] IS NULL) OR ([reserveComment] = @Original_reserveComment)) AND ((@IsNull_arr" +
                "iveDepartStatus = 1 AND [arriveDepartStatus] IS NULL) OR ([arriveDepartStatus] =" +
                " @Original_arriveDepartStatus)) AND ((@IsNull_seals = 1 AND [seals] IS NULL) OR " +
                "([seals] = @Original_seals)) AND ((@IsNull_arrivalInspectionLoadedEmptyStatus = " +
                "1 AND [arrivalInspectionLoadedEmptyStatus] IS NULL) OR ([arrivalInspectionLoaded" +
                "EmptyStatus] = @Original_arrivalInspectionLoadedEmptyStatus)) AND ((@IsNull_rele" +
                "aseInspectionLoadedEmptyStatus = 1 AND [releaseInspectionLoadedEmptyStatus] IS N" +
                "ULL) OR ([releaseInspectionLoadedEmptyStatus] = @Original_releaseInspectionLoade" +
                "dEmptyStatus)) AND ((@IsNull_releaseAuthorizationLoadedEmptyStatus = 1 AND [rele" +
                "aseAuthorizationLoadedEmptyStatus] IS NULL) OR ([releaseAuthorizationLoadedEmpty" +
                "Status] = @Original_releaseAuthorizationLoadedEmptyStatus)) AND ((@IsNull_serial" +
                "Number = 1 AND [serialNumber] IS NULL) OR ([serialNumber] = @Original_serialNumb" +
                "er)) AND ((@IsNull_arrivalDate = 1 AND [arrivalDate] IS NULL) OR ([arrivalDate] " +
                "= @Original_arrivalDate)) AND ([shipDate] = @Original_shipDate) AND ((@IsNull_ar" +
                "rivalInspectionDate = 1 AND [arrivalInspectionDate] IS NULL) OR ([arrivalInspect" +
                "ionDate] = @Original_arrivalInspectionDate)) AND ((@IsNull_releaseInspectionDate" +
                " = 1 AND [releaseInspectionDate] IS NULL) OR ([releaseInspectionDate] = @Origina" +
                "l_releaseInspectionDate)) AND ((@IsNull_releaseAuthorizationDate = 1 AND [releas" +
                "eAuthorizationDate] IS NULL) OR ([releaseAuthorizationDate] = @Original_releaseA" +
                "uthorizationDate)) AND ((@IsNull_fileTransferDate = 1 AND [fileTransferDate] IS " +
                "NULL) OR ([fileTransferDate] = @Original_fileTransferDate)) AND ((@IsNull_cpDate" +
                " = 1 AND [cpDate] IS NULL) OR ([cpDate] = @Original_cpDate)) AND ((@IsNull_loade" +
                "dEmptyDate = 1 AND [loadedEmptyDate] IS NULL) OR ([loadedEmptyDate] = @Original_" +
                "loadedEmptyDate)) AND ((@IsNull_releaseDate = 1 AND [releaseDate] IS NULL) OR ([" +
                "releaseDate] = @Original_releaseDate)) AND ((@IsNull_departDate = 1 AND [departD" +
                "ate] IS NULL) OR ([departDate] = @Original_departDate)) AND ((@IsNull_arrivalWei" +
                "ght = 1 AND [arrivalWeight] IS NULL) OR ([arrivalWeight] = @Original_arrivalWeig" +
                "ht)) AND ((@IsNull_sequence = 1 AND [sequence] IS NULL) OR ([sequence] = @Origin" +
                "al_sequence)) AND ((@IsNull_isRedTag = 1 AND [isRedTag] IS NULL) OR ([isRedTag] " +
                "= @Original_isRedTag)) AND ((@IsNull_isReserve = 1 AND [isReserve] IS NULL) OR (" +
                "[isReserve] = @Original_isReserve)) AND ([isVoided] = @Original_isVoided) AND ([" +
                "inputDate] = @Original_inputDate) AND ([inputBy] = @Original_inputBy) AND ([modi" +
                "fiedDate] = @Original_modifiedDate) AND ([modifiedBy] = @Original_modifiedBy) AN" +
                "D ((@IsNull_finalTransferDate = 1 AND [finalTransferDate] IS NULL) OR ([finalTra" +
                "nsferDate] = @Original_finalTransferDate)) AND ((@IsNull_outagePercentage = 1 AN" +
                "D [outagePercentage] IS NULL) OR ([outagePercentage] = @Original_outagePercentag" +
                "e)) AND ((@IsNull_siteId = 1 AND [siteId] IS NULL) OR ([siteId] = @Original_site" +
                "Id)) AND ((@IsNull_processBy = 1 AND [processBy] IS NULL) OR ([processBy] = @Ori" +
                "ginal_processBy)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_equipmentTripId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentTripId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_equipmentId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_locationId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "locationId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_locationId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "locationId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_customerId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shipperId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shipperId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_equipmentTripLoadedStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentTripLoadedStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_equipmentTripType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentTripType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_equipmentTripType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentTripType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_verificationSeal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "verificationSeal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_verificationSeal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "verificationSeal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_unitTrain", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unitTrain", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_unitTrain", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unitTrain", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_outboundUnitTrain", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "outboundUnitTrain", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_outboundUnitTrain", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "outboundUnitTrain", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_redTagComment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "redTagComment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_redTagComment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "redTagComment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_reserveComment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reserveComment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reserveComment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reserveComment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_arriveDepartStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arriveDepartStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_arriveDepartStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arriveDepartStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_seals", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seals", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_seals", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seals", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_arrivalInspectionLoadedEmptyStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalInspectionLoadedEmptyStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_arrivalInspectionLoadedEmptyStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalInspectionLoadedEmptyStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_releaseInspectionLoadedEmptyStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseInspectionLoadedEmptyStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_releaseInspectionLoadedEmptyStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseInspectionLoadedEmptyStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_releaseAuthorizationLoadedEmptyStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseAuthorizationLoadedEmptyStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_releaseAuthorizationLoadedEmptyStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseAuthorizationLoadedEmptyStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_serialNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "serialNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_serialNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "serialNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_arrivalDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_arrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shipDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shipDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_arrivalInspectionDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalInspectionDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_arrivalInspectionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalInspectionDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_releaseInspectionDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseInspectionDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_releaseInspectionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseInspectionDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_releaseAuthorizationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseAuthorizationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_releaseAuthorizationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseAuthorizationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fileTransferDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fileTransferDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fileTransferDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fileTransferDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_cpDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cpDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cpDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cpDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_loadedEmptyDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "loadedEmptyDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_loadedEmptyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "loadedEmptyDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_releaseDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_releaseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_departDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_departDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_arrivalWeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalWeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_arrivalWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 8, "arrivalWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sequence", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sequence", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sequence", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sequence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isRedTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRedTag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isRedTag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRedTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isReserve", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isReserve", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isReserve", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isReserve", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isVoided", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isVoided", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_inputDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "inputDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_inputBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "inputBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_modifiedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_modifiedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_finalTransferDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "finalTransferDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_finalTransferDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "finalTransferDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_outagePercentage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "outagePercentage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_outagePercentage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 8, "outagePercentage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_siteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "siteId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_siteId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "siteId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_processBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "processBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_processBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "processBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[EquipmentTrip] ([equipmentId], [locationId], [customerId], [sh" +
                "ipperId], [equipmentTripLoadedStatus], [equipmentTripType], [verificationSeal], " +
                "[unitTrain], [outboundUnitTrain], [status], [redTagComment], [reserveComment], [" +
                "arriveDepartStatus], [seals], [arrivalInspectionLoadedEmptyStatus], [releaseInsp" +
                "ectionLoadedEmptyStatus], [releaseAuthorizationLoadedEmptyStatus], [serialNumber" +
                "], [arrivalDate], [shipDate], [arrivalInspectionDate], [releaseInspectionDate], " +
                "[releaseAuthorizationDate], [fileTransferDate], [cpDate], [loadedEmptyDate], [re" +
                "leaseDate], [departDate], [arrivalWeight], [sequence], [isRedTag], [isReserve], " +
                "[isVoided], [inputDate], [inputBy], [modifiedDate], [modifiedBy], [finalTransfer" +
                "Date], [outagePercentage], [siteId], [processBy]) VALUES (@equipmentId, @locatio" +
                "nId, @customerId, @shipperId, @equipmentTripLoadedStatus, @equipmentTripType, @v" +
                "erificationSeal, @unitTrain, @outboundUnitTrain, @status, @redTagComment, @reser" +
                "veComment, @arriveDepartStatus, @seals, @arrivalInspectionLoadedEmptyStatus, @re" +
                "leaseInspectionLoadedEmptyStatus, @releaseAuthorizationLoadedEmptyStatus, @seria" +
                "lNumber, @arrivalDate, @shipDate, @arrivalInspectionDate, @releaseInspectionDate" +
                ", @releaseAuthorizationDate, @fileTransferDate, @cpDate, @loadedEmptyDate, @rele" +
                "aseDate, @departDate, @arrivalWeight, @sequence, @isRedTag, @isReserve, @isVoide" +
                "d, @inputDate, @inputBy, @modifiedDate, @modifiedBy, @finalTransferDate, @outage" +
                "Percentage, @siteId, @processBy);\r\nSELECT equipmentTripId, equipmentId, location" +
                "Id, customerId, shipperId, equipmentTripLoadedStatus, equipmentTripType, verific" +
                "ationSeal, unitTrain, outboundUnitTrain, status, redTagComment, reserveComment, " +
                "arriveDepartStatus, seals, arrivalInspectionLoadedEmptyStatus, releaseInspection" +
                "LoadedEmptyStatus, releaseAuthorizationLoadedEmptyStatus, serialNumber, arrivalD" +
                "ate, shipDate, arrivalInspectionDate, releaseInspectionDate, releaseAuthorizatio" +
                "nDate, fileTransferDate, cpDate, loadedEmptyDate, releaseDate, departDate, arriv" +
                "alWeight, sequence, isRedTag, isReserve, isVoided, inputDate, inputBy, modifiedD" +
                "ate, modifiedBy, finalTransferDate, outagePercentage, siteId, processBy FROM Equ" +
                "ipmentTrip WHERE (equipmentTripId = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@equipmentId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@locationId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "locationId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@customerId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shipperId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shipperId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@equipmentTripLoadedStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentTripLoadedStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@equipmentTripType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentTripType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@verificationSeal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "verificationSeal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unitTrain", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unitTrain", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@outboundUnitTrain", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "outboundUnitTrain", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@redTagComment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "redTagComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reserveComment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reserveComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@arriveDepartStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arriveDepartStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@seals", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seals", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@arrivalInspectionLoadedEmptyStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalInspectionLoadedEmptyStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@releaseInspectionLoadedEmptyStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseInspectionLoadedEmptyStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@releaseAuthorizationLoadedEmptyStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseAuthorizationLoadedEmptyStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@serialNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "serialNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@arrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shipDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shipDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@arrivalInspectionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalInspectionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@releaseInspectionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseInspectionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@releaseAuthorizationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseAuthorizationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fileTransferDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fileTransferDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cpDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cpDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@loadedEmptyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "loadedEmptyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@releaseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@departDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@arrivalWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 8, "arrivalWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sequence", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sequence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isRedTag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRedTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isReserve", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isReserve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isVoided", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isVoided", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "inputDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "inputBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modifiedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modifiedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@finalTransferDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "finalTransferDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@outagePercentage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 8, "outagePercentage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@siteId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "siteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@processBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "processBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[EquipmentTrip] SET [equipmentId] = @equipmentId, [locationId] = @lo" +
                "cationId, [customerId] = @customerId, [shipperId] = @shipperId, [equipmentTripLo" +
                "adedStatus] = @equipmentTripLoadedStatus, [equipmentTripType] = @equipmentTripTy" +
                "pe, [verificationSeal] = @verificationSeal, [unitTrain] = @unitTrain, [outboundU" +
                "nitTrain] = @outboundUnitTrain, [status] = @status, [redTagComment] = @redTagCom" +
                "ment, [reserveComment] = @reserveComment, [arriveDepartStatus] = @arriveDepartSt" +
                "atus, [seals] = @seals, [arrivalInspectionLoadedEmptyStatus] = @arrivalInspectio" +
                "nLoadedEmptyStatus, [releaseInspectionLoadedEmptyStatus] = @releaseInspectionLoa" +
                "dedEmptyStatus, [releaseAuthorizationLoadedEmptyStatus] = @releaseAuthorizationL" +
                "oadedEmptyStatus, [serialNumber] = @serialNumber, [arrivalDate] = @arrivalDate, " +
                "[shipDate] = @shipDate, [arrivalInspectionDate] = @arrivalInspectionDate, [relea" +
                "seInspectionDate] = @releaseInspectionDate, [releaseAuthorizationDate] = @releas" +
                "eAuthorizationDate, [fileTransferDate] = @fileTransferDate, [cpDate] = @cpDate, " +
                "[loadedEmptyDate] = @loadedEmptyDate, [releaseDate] = @releaseDate, [departDate]" +
                " = @departDate, [arrivalWeight] = @arrivalWeight, [sequence] = @sequence, [isRed" +
                "Tag] = @isRedTag, [isReserve] = @isReserve, [isVoided] = @isVoided, [inputDate] " +
                "= @inputDate, [inputBy] = @inputBy, [modifiedDate] = @modifiedDate, [modifiedBy]" +
                " = @modifiedBy, [finalTransferDate] = @finalTransferDate, [outagePercentage] = @" +
                "outagePercentage, [siteId] = @siteId, [processBy] = @processBy WHERE (([equipmen" +
                "tTripId] = @Original_equipmentTripId) AND ([equipmentId] = @Original_equipmentId" +
                ") AND ((@IsNull_locationId = 1 AND [locationId] IS NULL) OR ([locationId] = @Ori" +
                "ginal_locationId)) AND ([customerId] = @Original_customerId) AND ([shipperId] = " +
                "@Original_shipperId) AND ([equipmentTripLoadedStatus] = @Original_equipmentTripL" +
                "oadedStatus) AND ((@IsNull_equipmentTripType = 1 AND [equipmentTripType] IS NULL" +
                ") OR ([equipmentTripType] = @Original_equipmentTripType)) AND ((@IsNull_verifica" +
                "tionSeal = 1 AND [verificationSeal] IS NULL) OR ([verificationSeal] = @Original_" +
                "verificationSeal)) AND ((@IsNull_unitTrain = 1 AND [unitTrain] IS NULL) OR ([uni" +
                "tTrain] = @Original_unitTrain)) AND ((@IsNull_outboundUnitTrain = 1 AND [outboun" +
                "dUnitTrain] IS NULL) OR ([outboundUnitTrain] = @Original_outboundUnitTrain)) AND" +
                " ([status] = @Original_status) AND ((@IsNull_redTagComment = 1 AND [redTagCommen" +
                "t] IS NULL) OR ([redTagComment] = @Original_redTagComment)) AND ((@IsNull_reserv" +
                "eComment = 1 AND [reserveComment] IS NULL) OR ([reserveComment] = @Original_rese" +
                "rveComment)) AND ((@IsNull_arriveDepartStatus = 1 AND [arriveDepartStatus] IS NU" +
                "LL) OR ([arriveDepartStatus] = @Original_arriveDepartStatus)) AND ((@IsNull_seal" +
                "s = 1 AND [seals] IS NULL) OR ([seals] = @Original_seals)) AND ((@IsNull_arrival" +
                "InspectionLoadedEmptyStatus = 1 AND [arrivalInspectionLoadedEmptyStatus] IS NULL" +
                ") OR ([arrivalInspectionLoadedEmptyStatus] = @Original_arrivalInspectionLoadedEm" +
                "ptyStatus)) AND ((@IsNull_releaseInspectionLoadedEmptyStatus = 1 AND [releaseIns" +
                "pectionLoadedEmptyStatus] IS NULL) OR ([releaseInspectionLoadedEmptyStatus] = @O" +
                "riginal_releaseInspectionLoadedEmptyStatus)) AND ((@IsNull_releaseAuthorizationL" +
                "oadedEmptyStatus = 1 AND [releaseAuthorizationLoadedEmptyStatus] IS NULL) OR ([r" +
                "eleaseAuthorizationLoadedEmptyStatus] = @Original_releaseAuthorizationLoadedEmpt" +
                "yStatus)) AND ((@IsNull_serialNumber = 1 AND [serialNumber] IS NULL) OR ([serial" +
                "Number] = @Original_serialNumber)) AND ((@IsNull_arrivalDate = 1 AND [arrivalDat" +
                "e] IS NULL) OR ([arrivalDate] = @Original_arrivalDate)) AND ([shipDate] = @Origi" +
                "nal_shipDate) AND ((@IsNull_arrivalInspectionDate = 1 AND [arrivalInspectionDate" +
                "] IS NULL) OR ([arrivalInspectionDate] = @Original_arrivalInspectionDate)) AND (" +
                "(@IsNull_releaseInspectionDate = 1 AND [releaseInspectionDate] IS NULL) OR ([rel" +
                "easeInspectionDate] = @Original_releaseInspectionDate)) AND ((@IsNull_releaseAut" +
                "horizationDate = 1 AND [releaseAuthorizationDate] IS NULL) OR ([releaseAuthoriza" +
                "tionDate] = @Original_releaseAuthorizationDate)) AND ((@IsNull_fileTransferDate " +
                "= 1 AND [fileTransferDate] IS NULL) OR ([fileTransferDate] = @Original_fileTrans" +
                "ferDate)) AND ((@IsNull_cpDate = 1 AND [cpDate] IS NULL) OR ([cpDate] = @Origina" +
                "l_cpDate)) AND ((@IsNull_loadedEmptyDate = 1 AND [loadedEmptyDate] IS NULL) OR (" +
                "[loadedEmptyDate] = @Original_loadedEmptyDate)) AND ((@IsNull_releaseDate = 1 AN" +
                "D [releaseDate] IS NULL) OR ([releaseDate] = @Original_releaseDate)) AND ((@IsNu" +
                "ll_departDate = 1 AND [departDate] IS NULL) OR ([departDate] = @Original_departD" +
                "ate)) AND ((@IsNull_arrivalWeight = 1 AND [arrivalWeight] IS NULL) OR ([arrivalW" +
                "eight] = @Original_arrivalWeight)) AND ((@IsNull_sequence = 1 AND [sequence] IS " +
                "NULL) OR ([sequence] = @Original_sequence)) AND ((@IsNull_isRedTag = 1 AND [isRe" +
                "dTag] IS NULL) OR ([isRedTag] = @Original_isRedTag)) AND ((@IsNull_isReserve = 1" +
                " AND [isReserve] IS NULL) OR ([isReserve] = @Original_isReserve)) AND ([isVoided" +
                "] = @Original_isVoided) AND ([inputDate] = @Original_inputDate) AND ([inputBy] =" +
                " @Original_inputBy) AND ([modifiedDate] = @Original_modifiedDate) AND ([modified" +
                "By] = @Original_modifiedBy) AND ((@IsNull_finalTransferDate = 1 AND [finalTransf" +
                "erDate] IS NULL) OR ([finalTransferDate] = @Original_finalTransferDate)) AND ((@" +
                "IsNull_outagePercentage = 1 AND [outagePercentage] IS NULL) OR ([outagePercentag" +
                "e] = @Original_outagePercentage)) AND ((@IsNull_siteId = 1 AND [siteId] IS NULL)" +
                " OR ([siteId] = @Original_siteId)) AND ((@IsNull_processBy = 1 AND [processBy] I" +
                "S NULL) OR ([processBy] = @Original_processBy)));\r\nSELECT equipmentTripId, equip" +
                "mentId, locationId, customerId, shipperId, equipmentTripLoadedStatus, equipmentT" +
                "ripType, verificationSeal, unitTrain, outboundUnitTrain, status, redTagComment, " +
                "reserveComment, arriveDepartStatus, seals, arrivalInspectionLoadedEmptyStatus, r" +
                "eleaseInspectionLoadedEmptyStatus, releaseAuthorizationLoadedEmptyStatus, serial" +
                "Number, arrivalDate, shipDate, arrivalInspectionDate, releaseInspectionDate, rel" +
                "easeAuthorizationDate, fileTransferDate, cpDate, loadedEmptyDate, releaseDate, d" +
                "epartDate, arrivalWeight, sequence, isRedTag, isReserve, isVoided, inputDate, in" +
                "putBy, modifiedDate, modifiedBy, finalTransferDate, outagePercentage, siteId, pr" +
                "ocessBy FROM EquipmentTrip WHERE (equipmentTripId = @equipmentTripId)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@equipmentId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@locationId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "locationId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@customerId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shipperId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shipperId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@equipmentTripLoadedStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentTripLoadedStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@equipmentTripType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentTripType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@verificationSeal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "verificationSeal", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@unitTrain", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unitTrain", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@outboundUnitTrain", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "outboundUnitTrain", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@redTagComment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "redTagComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@reserveComment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reserveComment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@arriveDepartStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arriveDepartStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@seals", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seals", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@arrivalInspectionLoadedEmptyStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalInspectionLoadedEmptyStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@releaseInspectionLoadedEmptyStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseInspectionLoadedEmptyStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@releaseAuthorizationLoadedEmptyStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseAuthorizationLoadedEmptyStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@serialNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "serialNumber", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@arrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@shipDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shipDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@arrivalInspectionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalInspectionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@releaseInspectionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseInspectionDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@releaseAuthorizationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseAuthorizationDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fileTransferDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fileTransferDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@cpDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cpDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@loadedEmptyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "loadedEmptyDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@releaseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@departDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@arrivalWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 8, "arrivalWeight", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sequence", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sequence", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isRedTag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRedTag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isReserve", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isReserve", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@isVoided", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isVoided", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "inputDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inputBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "inputBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modifiedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@modifiedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@finalTransferDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "finalTransferDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@outagePercentage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 8, "outagePercentage", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@siteId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "siteId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@processBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "processBy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_equipmentTripId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentTripId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_equipmentId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_locationId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "locationId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_locationId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "locationId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_customerId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "customerId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shipperId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shipperId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_equipmentTripLoadedStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentTripLoadedStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_equipmentTripType", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentTripType", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_equipmentTripType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentTripType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_verificationSeal", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "verificationSeal", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_verificationSeal", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "verificationSeal", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_unitTrain", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unitTrain", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_unitTrain", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "unitTrain", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_outboundUnitTrain", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "outboundUnitTrain", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_outboundUnitTrain", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "outboundUnitTrain", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_status", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "status", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_redTagComment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "redTagComment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_redTagComment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "redTagComment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_reserveComment", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reserveComment", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_reserveComment", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "reserveComment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_arriveDepartStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arriveDepartStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_arriveDepartStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arriveDepartStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_seals", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seals", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_seals", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "seals", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_arrivalInspectionLoadedEmptyStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalInspectionLoadedEmptyStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_arrivalInspectionLoadedEmptyStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalInspectionLoadedEmptyStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_releaseInspectionLoadedEmptyStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseInspectionLoadedEmptyStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_releaseInspectionLoadedEmptyStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseInspectionLoadedEmptyStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_releaseAuthorizationLoadedEmptyStatus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseAuthorizationLoadedEmptyStatus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_releaseAuthorizationLoadedEmptyStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseAuthorizationLoadedEmptyStatus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_serialNumber", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "serialNumber", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_serialNumber", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "serialNumber", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_arrivalDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_arrivalDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_shipDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "shipDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_arrivalInspectionDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalInspectionDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_arrivalInspectionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalInspectionDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_releaseInspectionDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseInspectionDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_releaseInspectionDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseInspectionDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_releaseAuthorizationDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseAuthorizationDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_releaseAuthorizationDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseAuthorizationDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_fileTransferDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fileTransferDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_fileTransferDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "fileTransferDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_cpDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cpDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_cpDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "cpDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_loadedEmptyDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "loadedEmptyDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_loadedEmptyDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "loadedEmptyDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_releaseDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_releaseDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "releaseDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_departDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_departDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "departDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_arrivalWeight", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "arrivalWeight", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_arrivalWeight", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 8, "arrivalWeight", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_sequence", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sequence", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_sequence", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "sequence", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isRedTag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRedTag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isRedTag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isRedTag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_isReserve", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isReserve", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isReserve", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isReserve", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_isVoided", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "isVoided", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_inputDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "inputDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_inputBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "inputBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_modifiedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_modifiedBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "modifiedBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_finalTransferDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "finalTransferDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_finalTransferDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "finalTransferDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_outagePercentage", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "outagePercentage", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_outagePercentage", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 19, 8, "outagePercentage", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_siteId", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "siteId", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_siteId", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "siteId", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_processBy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "processBy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_processBy", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "processBy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@equipmentTripId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 0, 0, "equipmentTripId", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::ScaleIntegration_Server.Properties.Settings.Default.TRANSLOAD_TRIPConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT equipmentTripId, equipmentId, locationId, customerId, shipperId, equipmentTripLoadedStatus, equipmentTripType, verificationSeal, unitTrain, outboundUnitTrain, status, redTagComment, reserveComment, arriveDepartStatus, seals, arrivalInspectionLoadedEmptyStatus, releaseInspectionLoadedEmptyStatus, releaseAuthorizationLoadedEmptyStatus, serialNumber, arrivalDate, shipDate, arrivalInspectionDate, releaseInspectionDate, releaseAuthorizationDate, fileTransferDate, cpDate, loadedEmptyDate, releaseDate, departDate, arrivalWeight, sequence, isRedTag, isReserve, isVoided, inputDate, inputBy, modifiedDate, modifiedBy, finalTransferDate, outagePercentage, siteId, processBy FROM dbo.EquipmentTrip";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TRANSLOAD_TRIPDataSet.EquipmentTripDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TRANSLOAD_TRIPDataSet.EquipmentTripDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TRANSLOAD_TRIPDataSet.EquipmentTripDataTable dataTable = new TRANSLOAD_TRIPDataSet.EquipmentTripDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TRANSLOAD_TRIPDataSet.EquipmentTripDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TRANSLOAD_TRIPDataSet dataSet) {
            return this.Adapter.Update(dataSet, "EquipmentTrip");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    long Original_equipmentTripId, 
                    long Original_equipmentId, 
                    global::System.Nullable<long> Original_locationId, 
                    long Original_customerId, 
                    long Original_shipperId, 
                    string Original_equipmentTripLoadedStatus, 
                    string Original_equipmentTripType, 
                    string Original_verificationSeal, 
                    string Original_unitTrain, 
                    string Original_outboundUnitTrain, 
                    string Original_status, 
                    string Original_redTagComment, 
                    string Original_reserveComment, 
                    string Original_arriveDepartStatus, 
                    string Original_seals, 
                    string Original_arrivalInspectionLoadedEmptyStatus, 
                    string Original_releaseInspectionLoadedEmptyStatus, 
                    string Original_releaseAuthorizationLoadedEmptyStatus, 
                    string Original_serialNumber, 
                    global::System.Nullable<global::System.DateTime> Original_arrivalDate, 
                    System.DateTime Original_shipDate, 
                    global::System.Nullable<global::System.DateTime> Original_arrivalInspectionDate, 
                    global::System.Nullable<global::System.DateTime> Original_releaseInspectionDate, 
                    global::System.Nullable<global::System.DateTime> Original_releaseAuthorizationDate, 
                    global::System.Nullable<global::System.DateTime> Original_fileTransferDate, 
                    global::System.Nullable<global::System.DateTime> Original_cpDate, 
                    global::System.Nullable<global::System.DateTime> Original_loadedEmptyDate, 
                    global::System.Nullable<global::System.DateTime> Original_releaseDate, 
                    global::System.Nullable<global::System.DateTime> Original_departDate, 
                    global::System.Nullable<decimal> Original_arrivalWeight, 
                    global::System.Nullable<int> Original_sequence, 
                    global::System.Nullable<bool> Original_isRedTag, 
                    global::System.Nullable<bool> Original_isReserve, 
                    bool Original_isVoided, 
                    System.DateTime Original_inputDate, 
                    string Original_inputBy, 
                    System.DateTime Original_modifiedDate, 
                    string Original_modifiedBy, 
                    global::System.Nullable<global::System.DateTime> Original_finalTransferDate, 
                    global::System.Nullable<decimal> Original_outagePercentage, 
                    global::System.Nullable<long> Original_siteId, 
                    string Original_processBy) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(Original_equipmentTripId));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(Original_equipmentId));
            if ((Original_locationId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((long)(Original_locationId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((long)(Original_customerId));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((long)(Original_shipperId));
            if ((Original_equipmentTripLoadedStatus == null)) {
                throw new global::System.ArgumentNullException("Original_equipmentTripLoadedStatus");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_equipmentTripLoadedStatus));
            }
            if ((Original_equipmentTripType == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_equipmentTripType));
            }
            if ((Original_verificationSeal == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_verificationSeal));
            }
            if ((Original_unitTrain == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_unitTrain));
            }
            if ((Original_outboundUnitTrain == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_outboundUnitTrain));
            }
            if ((Original_status == null)) {
                throw new global::System.ArgumentNullException("Original_status");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_status));
            }
            if ((Original_redTagComment == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_redTagComment));
            }
            if ((Original_reserveComment == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_reserveComment));
            }
            if ((Original_arriveDepartStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_arriveDepartStatus));
            }
            if ((Original_seals == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_seals));
            }
            if ((Original_arrivalInspectionLoadedEmptyStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_arrivalInspectionLoadedEmptyStatus));
            }
            if ((Original_releaseInspectionLoadedEmptyStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_releaseInspectionLoadedEmptyStatus));
            }
            if ((Original_releaseAuthorizationLoadedEmptyStatus == null)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_releaseAuthorizationLoadedEmptyStatus));
            }
            if ((Original_serialNumber == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_serialNumber));
            }
            if ((Original_arrivalDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((System.DateTime)(Original_arrivalDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[34].Value = ((System.DateTime)(Original_shipDate));
            if ((Original_arrivalInspectionDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((System.DateTime)(Original_arrivalInspectionDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_releaseInspectionDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((System.DateTime)(Original_releaseInspectionDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_releaseAuthorizationDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((System.DateTime)(Original_releaseAuthorizationDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_fileTransferDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((System.DateTime)(Original_fileTransferDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_cpDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((System.DateTime)(Original_cpDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_loadedEmptyDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((System.DateTime)(Original_loadedEmptyDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_releaseDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((System.DateTime)(Original_releaseDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_departDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((System.DateTime)(Original_departDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_arrivalWeight.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((decimal)(Original_arrivalWeight.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_sequence.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((int)(Original_sequence.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_isRedTag.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[56].Value = ((bool)(Original_isRedTag.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_isReserve.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[58].Value = ((bool)(Original_isReserve.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[59].Value = ((bool)(Original_isVoided));
            this.Adapter.DeleteCommand.Parameters[60].Value = ((System.DateTime)(Original_inputDate));
            if ((Original_inputBy == null)) {
                throw new global::System.ArgumentNullException("Original_inputBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((string)(Original_inputBy));
            }
            this.Adapter.DeleteCommand.Parameters[62].Value = ((System.DateTime)(Original_modifiedDate));
            if ((Original_modifiedBy == null)) {
                throw new global::System.ArgumentNullException("Original_modifiedBy");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((string)(Original_modifiedBy));
            }
            if ((Original_finalTransferDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((System.DateTime)(Original_finalTransferDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_outagePercentage.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[67].Value = ((decimal)(Original_outagePercentage.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_siteId.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[69].Value = ((long)(Original_siteId.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_processBy == null)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((string)(Original_processBy));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long equipmentId, 
                    global::System.Nullable<long> locationId, 
                    long customerId, 
                    long shipperId, 
                    string equipmentTripLoadedStatus, 
                    string equipmentTripType, 
                    string verificationSeal, 
                    string unitTrain, 
                    string outboundUnitTrain, 
                    string status, 
                    string redTagComment, 
                    string reserveComment, 
                    string arriveDepartStatus, 
                    string seals, 
                    string arrivalInspectionLoadedEmptyStatus, 
                    string releaseInspectionLoadedEmptyStatus, 
                    string releaseAuthorizationLoadedEmptyStatus, 
                    string serialNumber, 
                    global::System.Nullable<global::System.DateTime> arrivalDate, 
                    System.DateTime shipDate, 
                    global::System.Nullable<global::System.DateTime> arrivalInspectionDate, 
                    global::System.Nullable<global::System.DateTime> releaseInspectionDate, 
                    global::System.Nullable<global::System.DateTime> releaseAuthorizationDate, 
                    global::System.Nullable<global::System.DateTime> fileTransferDate, 
                    global::System.Nullable<global::System.DateTime> cpDate, 
                    global::System.Nullable<global::System.DateTime> loadedEmptyDate, 
                    global::System.Nullable<global::System.DateTime> releaseDate, 
                    global::System.Nullable<global::System.DateTime> departDate, 
                    global::System.Nullable<decimal> arrivalWeight, 
                    global::System.Nullable<int> sequence, 
                    global::System.Nullable<bool> isRedTag, 
                    global::System.Nullable<bool> isReserve, 
                    bool isVoided, 
                    System.DateTime inputDate, 
                    string inputBy, 
                    System.DateTime modifiedDate, 
                    string modifiedBy, 
                    global::System.Nullable<global::System.DateTime> finalTransferDate, 
                    global::System.Nullable<decimal> outagePercentage, 
                    global::System.Nullable<long> siteId, 
                    string processBy) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(equipmentId));
            if ((locationId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(locationId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(customerId));
            this.Adapter.InsertCommand.Parameters[3].Value = ((long)(shipperId));
            if ((equipmentTripLoadedStatus == null)) {
                throw new global::System.ArgumentNullException("equipmentTripLoadedStatus");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(equipmentTripLoadedStatus));
            }
            if ((equipmentTripType == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(equipmentTripType));
            }
            if ((verificationSeal == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(verificationSeal));
            }
            if ((unitTrain == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(unitTrain));
            }
            if ((outboundUnitTrain == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(outboundUnitTrain));
            }
            if ((status == null)) {
                throw new global::System.ArgumentNullException("status");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(status));
            }
            if ((redTagComment == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(redTagComment));
            }
            if ((reserveComment == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(reserveComment));
            }
            if ((arriveDepartStatus == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(arriveDepartStatus));
            }
            if ((seals == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(seals));
            }
            if ((arrivalInspectionLoadedEmptyStatus == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(arrivalInspectionLoadedEmptyStatus));
            }
            if ((releaseInspectionLoadedEmptyStatus == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(releaseInspectionLoadedEmptyStatus));
            }
            if ((releaseAuthorizationLoadedEmptyStatus == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(releaseAuthorizationLoadedEmptyStatus));
            }
            if ((serialNumber == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(serialNumber));
            }
            if ((arrivalDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(arrivalDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(shipDate));
            if ((arrivalInspectionDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((System.DateTime)(arrivalInspectionDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((releaseInspectionDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(releaseInspectionDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((releaseAuthorizationDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((System.DateTime)(releaseAuthorizationDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((fileTransferDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(fileTransferDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((cpDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((System.DateTime)(cpDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((loadedEmptyDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(loadedEmptyDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((releaseDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(releaseDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((departDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((System.DateTime)(departDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((arrivalWeight.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(arrivalWeight.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((sequence.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((int)(sequence.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((isRedTag.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((bool)(isRedTag.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((isReserve.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(isReserve.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[32].Value = ((bool)(isVoided));
            this.Adapter.InsertCommand.Parameters[33].Value = ((System.DateTime)(inputDate));
            if ((inputBy == null)) {
                throw new global::System.ArgumentNullException("inputBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(inputBy));
            }
            this.Adapter.InsertCommand.Parameters[35].Value = ((System.DateTime)(modifiedDate));
            if ((modifiedBy == null)) {
                throw new global::System.ArgumentNullException("modifiedBy");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(modifiedBy));
            }
            if ((finalTransferDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((System.DateTime)(finalTransferDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((outagePercentage.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(outagePercentage.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((siteId.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((long)(siteId.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((processBy == null)) {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = ((string)(processBy));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long equipmentId, 
                    global::System.Nullable<long> locationId, 
                    long customerId, 
                    long shipperId, 
                    string equipmentTripLoadedStatus, 
                    string equipmentTripType, 
                    string verificationSeal, 
                    string unitTrain, 
                    string outboundUnitTrain, 
                    string status, 
                    string redTagComment, 
                    string reserveComment, 
                    string arriveDepartStatus, 
                    string seals, 
                    string arrivalInspectionLoadedEmptyStatus, 
                    string releaseInspectionLoadedEmptyStatus, 
                    string releaseAuthorizationLoadedEmptyStatus, 
                    string serialNumber, 
                    global::System.Nullable<global::System.DateTime> arrivalDate, 
                    System.DateTime shipDate, 
                    global::System.Nullable<global::System.DateTime> arrivalInspectionDate, 
                    global::System.Nullable<global::System.DateTime> releaseInspectionDate, 
                    global::System.Nullable<global::System.DateTime> releaseAuthorizationDate, 
                    global::System.Nullable<global::System.DateTime> fileTransferDate, 
                    global::System.Nullable<global::System.DateTime> cpDate, 
                    global::System.Nullable<global::System.DateTime> loadedEmptyDate, 
                    global::System.Nullable<global::System.DateTime> releaseDate, 
                    global::System.Nullable<global::System.DateTime> departDate, 
                    global::System.Nullable<decimal> arrivalWeight, 
                    global::System.Nullable<int> sequence, 
                    global::System.Nullable<bool> isRedTag, 
                    global::System.Nullable<bool> isReserve, 
                    bool isVoided, 
                    System.DateTime inputDate, 
                    string inputBy, 
                    System.DateTime modifiedDate, 
                    string modifiedBy, 
                    global::System.Nullable<global::System.DateTime> finalTransferDate, 
                    global::System.Nullable<decimal> outagePercentage, 
                    global::System.Nullable<long> siteId, 
                    string processBy, 
                    long Original_equipmentTripId, 
                    long Original_equipmentId, 
                    global::System.Nullable<long> Original_locationId, 
                    long Original_customerId, 
                    long Original_shipperId, 
                    string Original_equipmentTripLoadedStatus, 
                    string Original_equipmentTripType, 
                    string Original_verificationSeal, 
                    string Original_unitTrain, 
                    string Original_outboundUnitTrain, 
                    string Original_status, 
                    string Original_redTagComment, 
                    string Original_reserveComment, 
                    string Original_arriveDepartStatus, 
                    string Original_seals, 
                    string Original_arrivalInspectionLoadedEmptyStatus, 
                    string Original_releaseInspectionLoadedEmptyStatus, 
                    string Original_releaseAuthorizationLoadedEmptyStatus, 
                    string Original_serialNumber, 
                    global::System.Nullable<global::System.DateTime> Original_arrivalDate, 
                    System.DateTime Original_shipDate, 
                    global::System.Nullable<global::System.DateTime> Original_arrivalInspectionDate, 
                    global::System.Nullable<global::System.DateTime> Original_releaseInspectionDate, 
                    global::System.Nullable<global::System.DateTime> Original_releaseAuthorizationDate, 
                    global::System.Nullable<global::System.DateTime> Original_fileTransferDate, 
                    global::System.Nullable<global::System.DateTime> Original_cpDate, 
                    global::System.Nullable<global::System.DateTime> Original_loadedEmptyDate, 
                    global::System.Nullable<global::System.DateTime> Original_releaseDate, 
                    global::System.Nullable<global::System.DateTime> Original_departDate, 
                    global::System.Nullable<decimal> Original_arrivalWeight, 
                    global::System.Nullable<int> Original_sequence, 
                    global::System.Nullable<bool> Original_isRedTag, 
                    global::System.Nullable<bool> Original_isReserve, 
                    bool Original_isVoided, 
                    System.DateTime Original_inputDate, 
                    string Original_inputBy, 
                    System.DateTime Original_modifiedDate, 
                    string Original_modifiedBy, 
                    global::System.Nullable<global::System.DateTime> Original_finalTransferDate, 
                    global::System.Nullable<decimal> Original_outagePercentage, 
                    global::System.Nullable<long> Original_siteId, 
                    string Original_processBy, 
                    long equipmentTripId) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(equipmentId));
            if ((locationId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(locationId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(customerId));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(shipperId));
            if ((equipmentTripLoadedStatus == null)) {
                throw new global::System.ArgumentNullException("equipmentTripLoadedStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(equipmentTripLoadedStatus));
            }
            if ((equipmentTripType == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(equipmentTripType));
            }
            if ((verificationSeal == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(verificationSeal));
            }
            if ((unitTrain == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(unitTrain));
            }
            if ((outboundUnitTrain == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(outboundUnitTrain));
            }
            if ((status == null)) {
                throw new global::System.ArgumentNullException("status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(status));
            }
            if ((redTagComment == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(redTagComment));
            }
            if ((reserveComment == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(reserveComment));
            }
            if ((arriveDepartStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(arriveDepartStatus));
            }
            if ((seals == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(seals));
            }
            if ((arrivalInspectionLoadedEmptyStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(arrivalInspectionLoadedEmptyStatus));
            }
            if ((releaseInspectionLoadedEmptyStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(releaseInspectionLoadedEmptyStatus));
            }
            if ((releaseAuthorizationLoadedEmptyStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(releaseAuthorizationLoadedEmptyStatus));
            }
            if ((serialNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(serialNumber));
            }
            if ((arrivalDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(arrivalDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(shipDate));
            if ((arrivalInspectionDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(arrivalInspectionDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((releaseInspectionDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(releaseInspectionDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((releaseAuthorizationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(releaseAuthorizationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((fileTransferDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(fileTransferDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((cpDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(cpDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((loadedEmptyDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(loadedEmptyDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((releaseDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(releaseDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((departDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((System.DateTime)(departDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((arrivalWeight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(arrivalWeight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((sequence.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(sequence.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((isRedTag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(isRedTag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((isReserve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(isReserve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(isVoided));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(inputDate));
            if ((inputBy == null)) {
                throw new global::System.ArgumentNullException("inputBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(inputBy));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(modifiedDate));
            if ((modifiedBy == null)) {
                throw new global::System.ArgumentNullException("modifiedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(modifiedBy));
            }
            if ((finalTransferDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((System.DateTime)(finalTransferDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((outagePercentage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(outagePercentage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((siteId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((long)(siteId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((processBy == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(processBy));
            }
            this.Adapter.UpdateCommand.Parameters[41].Value = ((long)(Original_equipmentTripId));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((long)(Original_equipmentId));
            if ((Original_locationId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((long)(Original_locationId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[45].Value = ((long)(Original_customerId));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((long)(Original_shipperId));
            if ((Original_equipmentTripLoadedStatus == null)) {
                throw new global::System.ArgumentNullException("Original_equipmentTripLoadedStatus");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_equipmentTripLoadedStatus));
            }
            if ((Original_equipmentTripType == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_equipmentTripType));
            }
            if ((Original_verificationSeal == null)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_verificationSeal));
            }
            if ((Original_unitTrain == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_unitTrain));
            }
            if ((Original_outboundUnitTrain == null)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((string)(Original_outboundUnitTrain));
            }
            if ((Original_status == null)) {
                throw new global::System.ArgumentNullException("Original_status");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_status));
            }
            if ((Original_redTagComment == null)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_redTagComment));
            }
            if ((Original_reserveComment == null)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_reserveComment));
            }
            if ((Original_arriveDepartStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_arriveDepartStatus));
            }
            if ((Original_seals == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_seals));
            }
            if ((Original_arrivalInspectionLoadedEmptyStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(Original_arrivalInspectionLoadedEmptyStatus));
            }
            if ((Original_releaseInspectionLoadedEmptyStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_releaseInspectionLoadedEmptyStatus));
            }
            if ((Original_releaseAuthorizationLoadedEmptyStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(Original_releaseAuthorizationLoadedEmptyStatus));
            }
            if ((Original_serialNumber == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_serialNumber));
            }
            if ((Original_arrivalDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((System.DateTime)(Original_arrivalDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[75].Value = ((System.DateTime)(Original_shipDate));
            if ((Original_arrivalInspectionDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((System.DateTime)(Original_arrivalInspectionDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_releaseInspectionDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((System.DateTime)(Original_releaseInspectionDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_releaseAuthorizationDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((System.DateTime)(Original_releaseAuthorizationDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_fileTransferDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((System.DateTime)(Original_fileTransferDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_cpDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((System.DateTime)(Original_cpDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_loadedEmptyDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((System.DateTime)(Original_loadedEmptyDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_releaseDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((System.DateTime)(Original_releaseDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_departDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((System.DateTime)(Original_departDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((Original_arrivalWeight.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[93].Value = ((decimal)(Original_arrivalWeight.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((Original_sequence.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[95].Value = ((int)(Original_sequence.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((Original_isRedTag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[97].Value = ((bool)(Original_isRedTag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((Original_isReserve.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[99].Value = ((bool)(Original_isReserve.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[100].Value = ((bool)(Original_isVoided));
            this.Adapter.UpdateCommand.Parameters[101].Value = ((System.DateTime)(Original_inputDate));
            if ((Original_inputBy == null)) {
                throw new global::System.ArgumentNullException("Original_inputBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[102].Value = ((string)(Original_inputBy));
            }
            this.Adapter.UpdateCommand.Parameters[103].Value = ((System.DateTime)(Original_modifiedDate));
            if ((Original_modifiedBy == null)) {
                throw new global::System.ArgumentNullException("Original_modifiedBy");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_modifiedBy));
            }
            if ((Original_finalTransferDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[106].Value = ((System.DateTime)(Original_finalTransferDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[106].Value = global::System.DBNull.Value;
            }
            if ((Original_outagePercentage.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[108].Value = ((decimal)(Original_outagePercentage.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[108].Value = global::System.DBNull.Value;
            }
            if ((Original_siteId.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[110].Value = ((long)(Original_siteId.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[109].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[110].Value = global::System.DBNull.Value;
            }
            if ((Original_processBy == null)) {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[112].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[111].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[112].Value = ((string)(Original_processBy));
            }
            this.Adapter.UpdateCommand.Parameters[113].Value = ((long)(equipmentTripId));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long equipmentId, 
                    global::System.Nullable<long> locationId, 
                    long customerId, 
                    long shipperId, 
                    string equipmentTripLoadedStatus, 
                    string equipmentTripType, 
                    string verificationSeal, 
                    string unitTrain, 
                    string outboundUnitTrain, 
                    string status, 
                    string redTagComment, 
                    string reserveComment, 
                    string arriveDepartStatus, 
                    string seals, 
                    string arrivalInspectionLoadedEmptyStatus, 
                    string releaseInspectionLoadedEmptyStatus, 
                    string releaseAuthorizationLoadedEmptyStatus, 
                    string serialNumber, 
                    global::System.Nullable<global::System.DateTime> arrivalDate, 
                    System.DateTime shipDate, 
                    global::System.Nullable<global::System.DateTime> arrivalInspectionDate, 
                    global::System.Nullable<global::System.DateTime> releaseInspectionDate, 
                    global::System.Nullable<global::System.DateTime> releaseAuthorizationDate, 
                    global::System.Nullable<global::System.DateTime> fileTransferDate, 
                    global::System.Nullable<global::System.DateTime> cpDate, 
                    global::System.Nullable<global::System.DateTime> loadedEmptyDate, 
                    global::System.Nullable<global::System.DateTime> releaseDate, 
                    global::System.Nullable<global::System.DateTime> departDate, 
                    global::System.Nullable<decimal> arrivalWeight, 
                    global::System.Nullable<int> sequence, 
                    global::System.Nullable<bool> isRedTag, 
                    global::System.Nullable<bool> isReserve, 
                    bool isVoided, 
                    System.DateTime inputDate, 
                    string inputBy, 
                    System.DateTime modifiedDate, 
                    string modifiedBy, 
                    global::System.Nullable<global::System.DateTime> finalTransferDate, 
                    global::System.Nullable<decimal> outagePercentage, 
                    global::System.Nullable<long> siteId, 
                    string processBy, 
                    long Original_equipmentTripId, 
                    long Original_equipmentId, 
                    global::System.Nullable<long> Original_locationId, 
                    long Original_customerId, 
                    long Original_shipperId, 
                    string Original_equipmentTripLoadedStatus, 
                    string Original_equipmentTripType, 
                    string Original_verificationSeal, 
                    string Original_unitTrain, 
                    string Original_outboundUnitTrain, 
                    string Original_status, 
                    string Original_redTagComment, 
                    string Original_reserveComment, 
                    string Original_arriveDepartStatus, 
                    string Original_seals, 
                    string Original_arrivalInspectionLoadedEmptyStatus, 
                    string Original_releaseInspectionLoadedEmptyStatus, 
                    string Original_releaseAuthorizationLoadedEmptyStatus, 
                    string Original_serialNumber, 
                    global::System.Nullable<global::System.DateTime> Original_arrivalDate, 
                    System.DateTime Original_shipDate, 
                    global::System.Nullable<global::System.DateTime> Original_arrivalInspectionDate, 
                    global::System.Nullable<global::System.DateTime> Original_releaseInspectionDate, 
                    global::System.Nullable<global::System.DateTime> Original_releaseAuthorizationDate, 
                    global::System.Nullable<global::System.DateTime> Original_fileTransferDate, 
                    global::System.Nullable<global::System.DateTime> Original_cpDate, 
                    global::System.Nullable<global::System.DateTime> Original_loadedEmptyDate, 
                    global::System.Nullable<global::System.DateTime> Original_releaseDate, 
                    global::System.Nullable<global::System.DateTime> Original_departDate, 
                    global::System.Nullable<decimal> Original_arrivalWeight, 
                    global::System.Nullable<int> Original_sequence, 
                    global::System.Nullable<bool> Original_isRedTag, 
                    global::System.Nullable<bool> Original_isReserve, 
                    bool Original_isVoided, 
                    System.DateTime Original_inputDate, 
                    string Original_inputBy, 
                    System.DateTime Original_modifiedDate, 
                    string Original_modifiedBy, 
                    global::System.Nullable<global::System.DateTime> Original_finalTransferDate, 
                    global::System.Nullable<decimal> Original_outagePercentage, 
                    global::System.Nullable<long> Original_siteId, 
                    string Original_processBy) {
            return this.Update(equipmentId, locationId, customerId, shipperId, equipmentTripLoadedStatus, equipmentTripType, verificationSeal, unitTrain, outboundUnitTrain, status, redTagComment, reserveComment, arriveDepartStatus, seals, arrivalInspectionLoadedEmptyStatus, releaseInspectionLoadedEmptyStatus, releaseAuthorizationLoadedEmptyStatus, serialNumber, arrivalDate, shipDate, arrivalInspectionDate, releaseInspectionDate, releaseAuthorizationDate, fileTransferDate, cpDate, loadedEmptyDate, releaseDate, departDate, arrivalWeight, sequence, isRedTag, isReserve, isVoided, inputDate, inputBy, modifiedDate, modifiedBy, finalTransferDate, outagePercentage, siteId, processBy, Original_equipmentTripId, Original_equipmentId, Original_locationId, Original_customerId, Original_shipperId, Original_equipmentTripLoadedStatus, Original_equipmentTripType, Original_verificationSeal, Original_unitTrain, Original_outboundUnitTrain, Original_status, Original_redTagComment, Original_reserveComment, Original_arriveDepartStatus, Original_seals, Original_arrivalInspectionLoadedEmptyStatus, Original_releaseInspectionLoadedEmptyStatus, Original_releaseAuthorizationLoadedEmptyStatus, Original_serialNumber, Original_arrivalDate, Original_shipDate, Original_arrivalInspectionDate, Original_releaseInspectionDate, Original_releaseAuthorizationDate, Original_fileTransferDate, Original_cpDate, Original_loadedEmptyDate, Original_releaseDate, Original_departDate, Original_arrivalWeight, Original_sequence, Original_isRedTag, Original_isReserve, Original_isVoided, Original_inputDate, Original_inputBy, Original_modifiedDate, Original_modifiedBy, Original_finalTransferDate, Original_outagePercentage, Original_siteId, Original_processBy, Original_equipmentTripId);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private EquipmentTripTableAdapter _equipmentTripTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EquipmentTripTableAdapter EquipmentTripTableAdapter {
            get {
                return this._equipmentTripTableAdapter;
            }
            set {
                this._equipmentTripTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._equipmentTripTableAdapter != null) 
                            && (this._equipmentTripTableAdapter.Connection != null))) {
                    return this._equipmentTripTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._equipmentTripTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(TRANSLOAD_TRIPDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._equipmentTripTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EquipmentTrip.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._equipmentTripTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(TRANSLOAD_TRIPDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._equipmentTripTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EquipmentTrip.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._equipmentTripTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(TRANSLOAD_TRIPDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._equipmentTripTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EquipmentTrip.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._equipmentTripTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(TRANSLOAD_TRIPDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._equipmentTripTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._equipmentTripTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._equipmentTripTableAdapter != null)) {
                    revertConnections.Add(this._equipmentTripTableAdapter, this._equipmentTripTableAdapter.Connection);
                    this._equipmentTripTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._equipmentTripTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._equipmentTripTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._equipmentTripTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._equipmentTripTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._equipmentTripTableAdapter != null)) {
                    this._equipmentTripTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._equipmentTripTableAdapter]));
                    this._equipmentTripTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591